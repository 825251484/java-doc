es查询数据过程：
  客户端将请求发送到一个协调节点（coordinate node）
  协调节点将搜索请求发到所有分片（主分片或副本分片）。
  所有分片基于本分片的内容独立完成搜索， 然后返回符合条件的结果（文档ID和排序值）。
  协调节点将返回的结果重新排序和排名
  协调节点根据 doc id 去各个节点上拉取实际的 document 数据，最后返回给客户端。
  也就是说，ES的一次搜索，是一次scatter/gather过程（这个跟mapreduce很类似）。

es分词器有哪些
standard 默认分词器，按此切分，小写处理
keyword不分词
ik_max_word中文细粒度和ik_smart中文粗粒度智能分词


es分页查询方式
from+ size 分页，如果数据量不大或者from、size不大的情况下，效率还是蛮高的。但是在深度分页的情况下，这种使用方式效率是非常低的，并发一旦过大，还有可能直接拖垮整个ElasticSearch的集群。
scroll 分页通常不会用在客户端，因为每一个 scroll_id 都会占用大量的资源，一般是后台用于全量读取数据使用
search_after通过维护一个实时游标来避免scroll的缺点，它可以用于实时请求和高并发场景，一般用于客户端的分页查询
大体而言就是在这三种分页方式中，from + size不适合数据量很大的场景，scroll不适合实时场景，而search after在es5.x版本之后应运而生，较好的解决了这个问题。
https://www.jianshu.com/p/d7b4add8b87a

es集群架构、节点类型
#2.1 ES 主节点（Master）
ES主节点作用（Master）
    ElasticSearch默认是任何节点都可以成为主节点，负责增删索引，增删节点，主分片副本分片切换等工作，追踪集群中的节点状态等工作
    集群中如果某一个主节点挂掉，从节点会重新选择主节点
    生产环境master部署建议： 使用独立节点，尽量与data分开，数据节点达到3个，主节点至少三台，采用低配的服务器资源即可
#2.2 ES数据节点（Data）
    ElasticSearch数据节点主要是存储索引数据的节点,主要对文档进行增删改查操作，聚合操作,数据节点需要大量的空间来存储数据，索引和搜索等数据操作对CPU、内存、IO密集型的消耗非常大
    生产环境Data节点建议：单节点处理数据量5TB内，采用高配置的服务器资源（内存不建议超过64G，高速硬盘）
#2.3 协调节点（Coordinating）
    ElasticSearch默认每个node都是一个协调节点，主要用来负载均衡，把客户端的请求转发分配给最合适的节点来处理，降低主节点和数据节点负载
    在校集群中，协调节点的功能可以有主节点或数据节点来完成
    生产环境建议：大型集群中协调节点知识3个，采用中高配置的服务器资源
#2.4 预处理节点（Ingest）
    ES支持在将数据写入索引之前对数据进行预处理，内容富华等操作
    Ingest节点的功能抽象为：大数据处理环节的ETL（抽取、转换、加载）
    所有的节点都是默认支持ingest的，任何节点都可以处理ingest请求
    注意：监控数需要走ingest node进入集群，所以不建议关闭ingest功能
参考：http://v5blog.cn/pages/29f384/#_2-0-%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D


ES数据同步：
https://juejin.cn/post/6844903958318678023
