1.对称密码算法：是指加密秘钥和解密秘钥相同的密码算法
	分组密码算法：AES、SM1（国密）、SM4（国密）、等，用于数据加密。
		加密步骤一：将明文拆分为 N 个固定长度的明文块
		加密步骤二：用相同的秘钥和算法对每个明文块加密得到 N 个等长的密文块
		加密步骤三：然后将 N 个密文块按照顺序组合起来得到密文
	流密码算法：RC4
		又称序列密码算法
		加密：每次只加密一位或一字节明文
		解密：每次只解密一位或一字节密文
2.非对称密码算法： 是指加密秘钥和解密秘钥不同的密码算法，该算法使用一个秘钥进行加密，用另外一个秘钥进行解密。 RSA、SM2（国密）、DH、DSA、ECDSA、ECC 等
	加密秘钥可以公开，又称为 公钥
	解密秘钥必须保密，又称为 私钥
3.摘要算法：是指把任意长度的输入消息数据转化为固定长度的输出数据的一种密码算法，又称为 散列函数 、 哈希函数 、 杂凑函数 、单向函数 等
包含：摘要算法主要分为三大类：
	MD（Message Digest，消息摘要算法）、
	SHA-1（Secure Hash Algorithm，安全散列算法）和 
	MAC（Message Authentication Code，消息认证码算法）

MD5原理：
	将输入的数据转换成512位，不满512位，对其填充到512位，然后将512位，分成16个32位，经“与、或、非、位移等位运算”，最后输出一个128位(bit)固定长度的二进制数据。
再128位二进制数据转化为32个十六进制数据，32位的字符串就是最终的散列值

优点：MD5的运算均为32位 与、或、非、位移等位运算，因此其运算速率快，几乎不消耗CPU时间
缺点：
	1.无法防止碰撞：原始数据与其MD5散列结果并非一一对应，存在多个原始数据的MD5结果相同的可能性
	2.不安全：1996年后该算法被证实存在弱点，可以被加以破解（通过查字典方式获取MD5原文信息），对于需要高度安全性的数据，专家一般建议改用其他算法，如SHA-2
用途：平时的软件研发中经常使用MD5校验消息是否被篡改、验证文件完整性。通过散列算法输出一个散列值，通过数据对比散列值是否一致来判断数据的完整性，
参考
https://www.cnblogs.com/winyhan/p/16202939.html
https://baike.baidu.com/item/MD5/212708
